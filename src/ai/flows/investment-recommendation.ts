// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A investment recommendation AI agent.
 *
 * - investmentRecommendation - A function that handles the investment recommendation process.
 * - InvestmentRecommendationInput - The input type for the investmentRecommendation function.
 * - InvestmentRecommendationOutput - The return type for the investmentRecommendation function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const InvestmentRecommendationInputSchema = z.object({
  income: z.number().describe('The user\s annual income.'),
});
export type InvestmentRecommendationInput = z.infer<typeof InvestmentRecommendationInputSchema>;

const InvestmentRecommendationOutputSchema = z.object({
  recommendation: z.string().describe('The investment recommendation for the user.'),
});
export type InvestmentRecommendationOutput = z.infer<typeof InvestmentRecommendationOutputSchema>;

export async function investmentRecommendation(input: InvestmentRecommendationInput): Promise<InvestmentRecommendationOutput> {
  return investmentRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'investmentRecommendationPrompt',
  input: {schema: InvestmentRecommendationInputSchema},
  output: {schema: InvestmentRecommendationOutputSchema},
  prompt: `You are an expert financial advisor. Based on the user's income, provide a personalized investment recommendation.

Income: {{income}}`,
});

const investmentRecommendationFlow = ai.defineFlow(
  {
    name: 'investmentRecommendationFlow',
    inputSchema: InvestmentRecommendationInputSchema,
    outputSchema: InvestmentRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);

// This is an autogenerated file from Firebase Studio.
'use client';

import { useState, type FormEvent } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Loader2 } from 'lucide-react';

interface AuthFormProps {
  mode: 'login' | 'signup'; // mode is kept for structure, but signup is non-functional
  onSubmit: (email: string, password_DoNotStore: string) => Promise<void>;
  errorMessage?: string | null;
}

export function AuthForm({ mode, onSubmit, errorMessage }: AuthFormProps) {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  // confirmPassword and passwordsMatchError are related to signup, which is disabled.
  // Keeping them for now to avoid breaking AuthForm structure if it were reused, but they are not active.
  const [confirmPassword, setConfirmPassword] = useState(''); 
  const [isLoading, setIsLoading] = useState(false);
  const [passwordsMatchError, setPasswordsMatchError] = useState(false);


  const handleSubmit = async (event: FormEvent) => {
    event.preventDefault();
    // Signup specific validation, not strictly needed as signup is disabled.
    if (mode === 'signup' && password !== confirmPassword) {
      setPasswordsMatchError(true);
      return;
    }
    setPasswordsMatchError(false);
    setIsLoading(true);
    await onSubmit(email, password);
    setIsLoading(false);
  };

  const isLoginMode = mode === 'login';

  return (
    <Card className="w-full max-w-md dark:bg-transparent dark:border-none dark:shadow-none shadow-xl">
      <CardHeader className="text-center">
        <CardTitle className="font-headline text-3xl font-bold text-primary dark:text-primary">
          {isLoginMode ? 'FinanceFlow' : 'Create Account'}
        </CardTitle>
        <CardDescription className="dark:text-slate-400">
          {isLoginMode ? 'Admin Panel' : 'Sign up to start managing your finances with Finance Flow.'}
        </CardDescription>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-6">
          <div className="space-y-2">
            <Label htmlFor="email" className="dark:text-slate-300">Email</Label>
            <Input
              id="email"
              type="email"
              placeholder="Enter your email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
              className="bg-input dark:bg-slate-800 dark:text-slate-50 dark:border-slate-700"
            />
          </div>
          <div className="space-y-2">
            <Label htmlFor="password" className="dark:text-slate-300">Password</Label>
            <Input
              id="password"
              type="password"
              placeholder="Enter your password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
              className="bg-input dark:bg-slate-800 dark:text-slate-50 dark:border-slate-700"
            />
          </div>
          {/* Signup specific field, effectively disabled */}
          {mode === 'signup' && (
            <div className="space-y-2">
              <Label htmlFor="confirm-password">Confirm Password</Label>
              <Input
                id="confirm-password"
                type="password"
                placeholder="••••••••"
                value={confirmPassword}
                onChange={(e) => setConfirmPassword(e.target.value)}
                required
                className="bg-input dark:bg-slate-800 dark:text-slate-50 dark:border-slate-700"
              />
              {passwordsMatchError && <p className="text-sm text-destructive">Passwords do not match.</p>}
            </div>
          )}
          {errorMessage && <p className="text-sm text-destructive">{errorMessage}</p>}
          <Button type="submit" className="w-full bg-primary hover:bg-primary/90 text-primary-foreground dark:text-primary-foreground" disabled={isLoading}>
            {isLoading && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
            {isLoginMode ? 'Login' : 'Sign Up'}
          </Button>
        </form>
      </CardContent>
      {/* Footer removed as signup is disabled and not relevant for admin-only login */}
    </Card>
  );
}
